{"version":3,"sources":["serviceWorker.js","components/Header.js","containers/AppContainer.js","router.js","store/initialState.js","reducers/index.js","reducers/cell.js","reducers/table.js","store/store.js","index.js","actions/acs.js","constants/actionTypes.js","actions/table.js","components/Cell.js","containers/Mathtable.js","containers/Controlscontainer.js"],"names":["Boolean","window","location","hostname","match","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeTitle","e","setState","prevState","objectSpread","headerTitle","inputRef","current","value","changeTitleView","showInput","changeDeleteView","showDelete","saveTitle","_this$props","updateItem","id","title","state","changeTitleKeyboard","key","createNewTable","_this$props2","history","clearSheet","actionCellClear","push","deleteTable","_this$props3","deleteItem","componentDidUpdate","prevProps","React","createRef","_this$state","react_default","a","createElement","className","Link","to","onClick","icon","type","onDoubleClick","style","display","autoFocus","ref","onKeyUp","onBlur","defaultValue","Component","connect","table","dispatch","bindActionCreators","actions","actionsCell","withRouter","AppContainer","componentDidMount","getSheet","params","error","clearFailRequest","concat","components_Header","enableUpdate","Mathtable","Router","Switch","Route","exact","path","component","render","initialState","cell","formula","isFetching","combineReducers","action","undefined","arguments","length","_ref","payload","types","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","store","BrowserRouter","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","r","__webpack_exports__","d","actionInputCell","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","GET_SHEET","GET_SHEET_SUCCESS","GET_SHEET_FAIL","SAVE_SHEET","SAVE_SHEET_SUCCESS","SAVE_SHEET_FAIL","CLEAR_SHEET","DELETE_SHEET","DELETE_SHEET_SUCCESS","DELETE_SHEET_FAIL","CLEAR_FAIL","CELL_CURRENT","CELL_CLEAR","getSheetRequest","getSheetRequestSuccess","getSheetRequestRequestFail","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_MyFrontEnd_react_exel_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref2","data","wrap","_context","prev","next","axios","sent","t0","stop","_x","apply","postSheetRequest","postSheetRequestSuccess","postSheetRequestFail","saveItem","_ref3","_callee2","_ref4","_context2","method","headers","Content-Type","_x2","putSheetRequest","putSheetRequestSuccess","putSheetRequestFail","_ref5","_callee3","_ref6","_context3","_x3","deleteSheetRequest","deleteSheetRequestSuccess","deleteSheetRequestFail","_ref7","_callee4","_context4","t1","t2","t3","t4","_x4","Cell","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","changeFormula","preventDefault","update","cellFromState","isEdited","inputCell","focus","prevstate","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","blur","changeFormulaKeyboard","onSend","enableEditing","defaultCell","toUpperCase","search","changeCellView","setCurrent","startSelecting","x","y","continueSelecting","stopSelecting","nextProps","nextState","nextContext","active","isSelected","selectionRange","enabledInput","_prevProps$selectionR","start","end","enableRange","prevValue","charAt","test","selected","_this$props4","isFirst","react__WEBPACK_IMPORTED_MODULE_6___default","onMouseDown","onMouseEnter","onMouseUp","console","log","MathTable","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","counter","flag","newSelectionObj","selectedCells","pressed","startX","startY","endX","endY","selectionInFormula","currentCell","_y","selection","kindOfSelection","newSelectionArray","getSelectedCells","D_MyFrontEnd_react_exel_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","range","charCodeAt","map","_col","row","col","String","fromCharCode","array","inc","i","unshift","calculateValue","_value","operation","rangeMatch","stringCell","substring","updatedFormula","indexOf","divNull","notProperSymbols","slice","arrFromState","arrOfValues","forEach","item","cellX","foundValue","trim","toLowerCase","reduce","currentValue","eval","matches","replace","cellUpdate","changedCell","upDatedCell","assign","currentItem","formulaMatch","updateState","_currentCell","_formula","JSON","parse","stringify","newState","cellTable","colStart","colEnd","rowStart","rowEnd","arrayOfRows","arrayOfCells","interCell","_this2","savingStatus","_selectionRange","list","react__WEBPACK_IMPORTED_MODULE_7___default","_React$createElement","initialCell","_components_Cell__WEBPACK_IMPORTED_MODULE_13__","some","_Controlscontainer__WEBPACK_IMPORTED_MODULE_12__","enableArray","mapStateToProps","mapDispatchToProps","ControlsContainer","changeCellFormulaKeyboard","enableAutoFocus","_this$props$selection","name","disabled"],"mappings":"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","file":"static/js/main.fdf63d46.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport * as actions from \"../actions/table\";\r\nimport * as actionsCell from \"../actions/acs\";\r\n\r\nimport { Icon } from 'antd';\r\n\r\n\r\nclass Header extends Component{\r\n    constructor(props) {\r\n        super(props);   \r\n        this.state = {      \r\n            showInput: false,\r\n            headerTitle: \"\",\r\n            showDelete: false\r\n        } \r\n        \r\n        this.inputRef = React.createRef();\r\n      }\r\n\r\n    changeTitle = (e) => {\r\n        this.setState(prevState => \r\n            ({ ...prevState, headerTitle: this.inputRef.current.value})\r\n        )               \r\n    }\r\n\r\n    changeTitleView = () => {  \r\n        this.setState(prevState => \r\n          ({ ...prevState, showInput: !prevState.showInput})\r\n        )      \r\n    }\r\n\r\n    changeDeleteView = () => {  \r\n        this.setState(prevState => \r\n            ({ ...prevState, showDelete: !prevState.showDelete}))              \r\n    }\r\n\r\n    saveTitle = () => {\r\n        const { updateItem, id } = this.props;\r\n        if (id){\r\n            updateItem({title: this.state.headerTitle}, id)\r\n        }            \r\n        this.changeTitleView()\r\n    }\r\n\r\n    changeTitleKeyboard = (e) => {\r\n        if (e.key === 'Enter' ){\r\n            this.saveTitle()\r\n        } else this.changeTitle()\r\n    }\r\n\r\n    createNewTable = () => {\r\n        const {history, clearSheet, actionCellClear} = this.props\r\n        history.push(\"/\")\r\n        this.changeDeleteView()\r\n        clearSheet()   \r\n        actionCellClear()     \r\n    }\r\n\r\n    deleteTable = () => {\r\n        const {id, deleteItem, history, clearSheet} = this.props\r\n        deleteItem(id)        \r\n        history.push(\"/\")\r\n        this.changeDeleteView()\r\n        clearSheet()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {        \r\n        if (this.props.id && !prevProps.id ) {\r\n            this.changeDeleteView()\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const {title} = this.props\r\n        let {showInput, headerTitle, showDelete} = this.state\r\n      \r\n        return(\r\n            <header className=\"header\">\r\n                <div className=\"header__logo-box\" title=\"Create new file\">\r\n                    <Link  to=\"/\" onClick={this.createNewTable} >\r\n                        <Icon type=\"file-excel\" className=\"header__logo\" />\r\n                    </Link>\r\n                </div>                \r\n                <div className=\"header__name-box\" \r\n                    onDoubleClick = {this.changeTitleView}>\r\n                        {showInput && \r\n                            <input \r\n                                className='header input'\r\n                                style = {{display: showInput ? \"inline-block\" : \"none\"}}\r\n                                autoFocus = {true}\r\n                                ref={this.inputRef}\r\n                                onKeyUp={this.changeTitleKeyboard}\r\n                                onBlur={this.saveTitle}\r\n                                defaultValue={title}                                \r\n                            /> \r\n                        } \r\n                        <span className=\"header__name\"\r\n                            style = {{display: !showInput ? \"inline-block\" : \"none\"}}>\r\n                                {title ? title : (headerTitle ? headerTitle : \"Untitled\")}\r\n                        </span>                       \r\n                </div>\r\n                <div className=\"header__delete-box\" title=\"Delete file\" >\r\n                    {showDelete &&                                            \r\n                        <Icon type=\"delete\" onClick={this.deleteTable} className=\"header__icon\" />                   \r\n                    }\r\n                </div> \r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n        id: state.table.id,\t\t\r\n\t\ttitle: state.table.title\t\t\r\n\t};\r\n};\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ ...actions, ...actionsCell }, dispatch);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(Header));","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport * as actions from \"../actions/table\";\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport MathTable from './Mathtable'\r\nimport Header from '../components/Header'\r\n\r\n\r\nclass AppContainer extends Component {\r\n   \r\n    componentDidMount = () => {\r\n        const { match, getSheet } = this.props;\r\n        if (match.params.id){\r\n            getSheet(match.params.id)\r\n        }             \r\n    }  \r\n    \r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        const { match, id, error, history, clearFailRequest } = this.props;\r\n        if (!prevProps.error && error){\r\n            history.push(\"/\")\r\n            clearFailRequest()\r\n        }\r\n        \r\n        if (id && match.params.id !== id){\r\n            return history.push(`/${id}`)                \r\n        } \r\n    }\r\n\r\n    render(){        \r\n        return (\r\n            <div className=\"App\"> \r\n                <Header  enableUpdate={this.enableUpdate} />     \r\n                <MathTable  />\r\n            </div>\r\n        )\r\n    }     \r\n}\r\n  \r\nconst mapStateToProps = state => {\r\n\treturn {\r\n        id: state.table.id,\r\n        error: state.table.error,\t\t\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ ...actions }, dispatch);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(AppContainer));\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport AppContainer from './containers/AppContainer'\r\n\r\nclass Router extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/:id\" component={AppContainer} />\t\t\t\t\r\n\t\t\t\t\t<Route exact path=\"/\" component={AppContainer} />\r\n\t\t\t\t\t<Route render={() => <div>404 NOT FOUND</div>} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Router\r\n","export default {    \r\n        cell: {\r\n            id: \"\",\r\n            formula: \"\",\r\n            cell: {},\r\n            error: null\r\n        },\r\n        table: {\r\n            id: null,\r\n            title: null,\r\n            table: {},\r\n            error: null,\r\n            isFetching: false\r\n        }        \r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport cell from \"./cell\";\r\nimport table from \"./table\";\r\n\r\nexport default combineReducers({\r\n\tcell,\r\n\ttable\r\n});","export default (state, action) => {\r\n  if (state === undefined){\r\n    return {\r\n      id: null,\r\n      formula: '',\r\n      cell: {},\r\n    }\r\n  }\r\n  if (action.type === 'CELL_CURRENT'){\r\n    return {\r\n      id: action.id,\r\n      formula: action.formula,\r\n      cell: action.cell,\r\n    }\r\n  }\r\n  if (action.type === 'CELL_SELECTED'){\r\n    return {\r\n      id: action.id,\r\n      formula: action.formula,\r\n      cell: action.cell,\r\n    }\r\n  }\r\n  if (action.type === 'CELL_CLEAR'){\r\n    return {\r\n      id: null,\r\n      formula: '',\r\n      cell: {},\r\n    }\r\n  }\r\n  return state;\r\n}","import * as types from \"../constants/actionTypes\";\r\n\r\nimport initialState from \"../store/initialState\";\r\n\r\nexport default (state = initialState.table, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase types.GET_SHEET: {\r\n\t\t\treturn { ...state, isFetching: true };\r\n\t\t}\r\n\t\tcase types.GET_SHEET_SUCCESS: {\r\n\t\t\tconst { id, title, table } = payload;\t\t\t\r\n\t\t\treturn { ...state, id, title, table, isFetching: false, error: false };\r\n\t\t}\r\n\t\tcase types.GET_SHEET_FAIL: {\r\n\t\t\treturn { ...state, isFetching: false, error: true };\r\n\t\t}\r\n\t\t\r\n\t\tcase types.SAVE_SHEET: {\r\n\t\t\treturn { ...state, isFetching: true };\r\n\t\t}\r\n\t\tcase types.SAVE_SHEET_SUCCESS: {\r\n\t\t\tconst { id, title, table } = payload;\r\n\t\t\treturn { ...state, id, title, table, isFetching: false, error: false };\r\n\t\t}\r\n\t\tcase types.SAVE_SHEET_FAIL: {\r\n\t\t\treturn { ...state, isFetching: false, error: true };\r\n\t\t}\r\n\r\n\t\tcase types.CLEAR_SHEET: {\r\n\t\t\treturn { ...initialState.table, isFetching: false };\r\n\t\t}\r\n\r\n\t\tcase types.DELETE_SHEET: {\r\n\t\t\treturn { ...state, isFetching: true };\r\n\t\t}\r\n\t\tcase types.DELETE_SHEET_SUCCESS: {\r\n\t\t\treturn { ...initialState.table, isFetching: false, error: false };\r\n\t\t}\r\n\t\tcase types.DELETE_SHEET_FAIL: {\r\n\t\t\treturn { ...state, isFetching: false, error: true };\r\n\t\t}\r\n\r\n\t\tcase types.CLEAR_FAIL: {\r\n\t\t\treturn { ...state, isFetching: false, error: false };\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import {createStore, applyMiddleware} from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\nimport initialState from \"./initialState\"; \r\n  \r\n  export default createStore(\r\n    reducers,\r\n    initialState,\r\n    applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Router from \"./router\";\n\nimport \"./style/index.scss\";\n\nimport store from \"./store/store.js\";\n\n// store.subscribe(() => console.log(store.getState()))\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<Router />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();","import * as types from \"../constants/actionTypes\";\r\n\r\nexport const actionInputCell = (id, formula, cell) => ({\r\n  type: types.CELL_CURRENT,\r\n  id,\r\n  formula, cell \r\n});\r\n\r\nexport const actionCellClear = (payload) => ({\r\n  type: types.CELL_CLEAR,\r\n  payload \r\n})","export const GET_SHEET = \"GET_SHEET\";\r\nexport const GET_SHEET_SUCCESS = \"GET_SHEET_SUCCESS\";\r\nexport const GET_SHEET_FAIL = \"GET_SHEET_FAIL\";\r\n\r\nexport const SAVE_SHEET = \"SAVE_SHEET\";\r\nexport const SAVE_SHEET_SUCCESS = \"SAVE_SHEET_SUCCESS\";\r\nexport const SAVE_SHEET_FAIL = \"SAVE_SHEET_FAIL\";\r\n\r\nexport const CLEAR_SHEET = \"CLEAR_SHEET\";\r\n\r\nexport const DELETE_SHEET = \"DELETE_SHEET\";\r\nexport const DELETE_SHEET_SUCCESS = \"DELETE_SHEET_SUCCESS\";\r\nexport const DELETE_SHEET_FAIL = \"DELETE_SHEET_FAIL\";\r\n\r\nexport const CLEAR_FAIL = \"CLEAR_FAIL\";\r\n\r\n\r\nexport const CELL_CURRENT = \"CELL_CURRENT\";\r\nexport const CELL_SELECTED = \"CELL_SELECTED\";\r\nexport const CELL_CLEAR = \"CELL_CLEAR\";","import * as types from \"../constants/actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst getSheetRequest = (payload) => ({\r\n    type: types.GET_SHEET,\r\n    payload\r\n})\r\n\r\nconst getSheetRequestSuccess = (payload) => ({\r\n    type: types.GET_SHEET_SUCCESS,\r\n    payload\r\n});\r\n\r\nconst getSheetRequestRequestFail = (payload) => ({\r\n    type: types.GET_SHEET_FAIL,\r\n    payload\r\n});\r\n\r\nexport function getSheet ( id ) {\r\n    return async function (dispatch){\r\n        dispatch (getSheetRequest())\r\n        try {\r\n            \r\n            let {data} = await axios(`http://localhost:3000/states?id=${id}`\r\n            )                \r\n            dispatch (getSheetRequestSuccess(data[0]))\r\n        }\r\n        catch(e){\r\n            dispatch (getSheetRequestRequestFail(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst postSheetRequest = (payload) => ({\r\n    type: types.SAVE_SHEET,\r\n    payload\r\n})\r\n\r\nconst postSheetRequestSuccess = (payload) => ({\r\n    type: types.SAVE_SHEET_SUCCESS,\r\n    payload\r\n});\r\n\r\nconst postSheetRequestFail = (payload) => ({\r\n    type: types.SAVE_SHEET_FAIL,\r\n    payload\r\n});\r\n\r\nexport function saveItem (payload) {\r\n    return async function (dispatch){\r\n        dispatch (postSheetRequest())\r\n        try {\r\n            let {data} = await axios(\"http://localhost:3000/states\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                },\r\n                data: payload\r\n            })        \r\n            dispatch (postSheetRequestSuccess(data))\r\n        }\r\n        catch(e){\r\n            dispatch (postSheetRequestFail(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst putSheetRequest = (payload) => ({\r\n    type: types.SAVE_SHEET,\r\n    payload\r\n})\r\n\r\nconst putSheetRequestSuccess = (payload) => ({\r\n    type: types.SAVE_SHEET_SUCCESS,\r\n    payload\r\n});\r\n\r\nconst putSheetRequestFail = (payload) => ({\r\n    type: types.SAVE_SHEET_FAIL,\r\n    payload\r\n});\r\n\r\nexport function updateItem (payload, id) {\r\n    return async function (dispatch){\r\n        dispatch (putSheetRequest())\r\n        try {     \r\n            let {data} = await axios(`http://localhost:3000/states/${id}`,\r\n                {\r\n                    method: \"PATCH\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                    },\r\n                    data: payload\r\n                })\r\n            dispatch (putSheetRequestSuccess(data))\r\n        }\r\n        catch(e){\r\n            dispatch (putSheetRequestFail(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const clearSheet = () => ({\r\n    type: types.CLEAR_SHEET\r\n});\r\n\r\n\r\n\r\nconst deleteSheetRequest = (payload) => ({\r\n    type: types.SAVE_SHEET,\r\n    payload\r\n})\r\n\r\nconst deleteSheetRequestSuccess = (payload) => ({\r\n    type: types.SAVE_SHEET_SUCCESS,\r\n    payload\r\n});\r\n\r\nconst deleteSheetRequestFail = (payload) => ({\r\n    type: types.SAVE_SHEET_FAIL,\r\n    payload\r\n});\r\n\r\nexport const clearFailRequest = (payload) => ({\r\n    type: types.CLEAR_FAIL,\r\n    payload\r\n});\r\n\r\n\r\nexport function deleteItem (id) {\r\n    return async function (dispatch){\r\n        dispatch (deleteSheetRequest())\r\n        try {            \r\n             dispatch (deleteSheetRequestSuccess(\r\n                await axios(`http://localhost:3000/states/${id}`,\r\n                {\r\n                    method: \"DELETE\"\r\n                }))\r\n            )\r\n        }\r\n        catch(e){\r\n            dispatch (deleteSheetRequestFail(e))\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import InputComponent from \"./controls\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport {actionInputCell, actionCellClear} from \"../actions/acs\";\r\n\r\nclass Cell extends Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {      \r\n        showInput: false\r\n      }\r\n      this.defaultCell = {\r\n        id: this.props.cellFromState.id,\r\n        x: this.props.cellFromState.x,\r\n        y: this.props.cellFromState.y,\r\n        formula: this.props.cell.formula\r\n      }\r\n      this.inputCell = React.createRef()\r\n    }  \r\n\r\n    \r\n    changeFormula = (e) => {  \r\n      e.preventDefault()\r\n      const {update, cellFromState, isEdited} = this.props\r\n      // console.log(\"input\",  this.inputCell, this.inputCell.current.value,this.props.isEdited ) \r\n      if ( !isEdited) {\r\n        // if(this.inputCell.value !== this.defaultCell.formula){\r\n          update( cellFromState, this.inputCell.current.value);\r\n          this.setState(prevstate => \r\n            ({ ...prevstate, showInput: !prevstate.showInput})\r\n          )\r\n          this.inputCell.current.blur()\r\n        // }\r\n      } else {\r\n        this.inputCell.current.focus()} \r\n    }\r\n\r\n    changeFormulaKeyboard = (e) => {  \r\n      const {onSend, cellFromState, enableEditing, update} = this.props\r\n      onSend(this.defaultCell.id, this.inputCell.current.value, cellFromState)     \r\n      let enableRange = this.inputCell.current.value.toUpperCase().search(/(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)\\s*\\(\\s*/g) >= 0\r\n      if( enableRange ){\r\n        // console.log(\"enableEditing\" )\r\n        enableEditing(this.defaultCell.id, true) \r\n      } \r\n      // else if (this.inputCell.current.value.charAt(0) === \"=\"){\r\n      //   console.log(\"enableEditing\" )\r\n      //   this.props.enableEditing(this.defaultCell.id, true) \r\n      //   console.log(\"continue\" )\r\n      // }\r\n      if (e.key === 'Enter' ){\r\n        // console.log(\"enter\")\r\n        update( cellFromState, this.inputCell.current.value);\r\n        enableEditing(this.defaultCell.id, false)  \r\n        this.setState(prevstate => \r\n          ({ ...prevstate, showInput: !prevstate.showInput})\r\n        ) \r\n      } else {\r\n        // console.log(\"focus\")\r\n        onSend(this.defaultCell.id, this.inputCell.current.value, cellFromState)\r\n      } \r\n    }\r\n\r\n    changeCellView = () => {  \r\n      this.setState(prevstate => \r\n        ({ ...prevstate, showInput: !prevstate.showInput})\r\n      )      \r\n    }\r\n\r\n    setCurrent = () => {\r\n      const {cellFromState, isEdited, actionCellClear, onSend} = this.props\r\n      if (cellFromState.className === \"cell-title\" && !isEdited){\r\n        actionCellClear()\r\n        return\r\n      } \r\n      if (!isEdited)\r\n        onSend(this.defaultCell.id, cellFromState.formula, cellFromState);      \r\n    }\r\n\r\n    startSelecting = () => { \r\n      // console.log(\"start selecting cell\", this.defaultCell.id)     \r\n      this.props.startSelecting(this.defaultCell.x, this.defaultCell.y)\r\n    }\r\n    continueSelecting = () => {      \r\n        // console.log(\"continue selecting cell\", this.defaultCell.id)     \r\n        this.props.continueSelecting(this.defaultCell.x, this.defaultCell.y);      \r\n    }\r\n    stopSelecting = () => {\r\n      // console.log(\"stop selecting\") \r\n      this.props.stopSelecting();     \r\n    }\r\n\r\n    \r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {               \r\n        if(nextProps.cellFromState.value !== this.props.cellFromState.value)\r\n          return true;\r\n        if(nextProps.active !== this.props.active || nextProps.isSelected !== this.props.isSelected)\r\n          return true;\r\n        if(nextProps.cell.id !== this.props.cellFromState.id) \r\n          return false; \r\n        return true\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      let {selectionRange} = this.props\r\n      const enabledInput = this.inputCell.current\r\n      const endOfInput = /(\\+|\\-|\\:|\\*)$/g\r\n      if ( selectionRange && selectionRange !== prevProps.selectionRange ){\r\n        // console.log(\"range in input satrt\")\r\n        let {start, end} = prevProps.selectionRange\r\n        if (this.state.showInput){\r\n          // console.log(\"range in input mutation\", this.inputCell.current.value)\r\n          let enableRange = this.inputCell.current.value.toUpperCase().search(/(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)\\s*\\(\\s*/g) >= 0         \r\n          let prevValue = this.inputCell.current.value.toUpperCase().match(/(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)/g) || \"=\"        \r\n          if (this.inputCell.current && enableRange && start.x){ \r\n            // console.log(\"enableRange\", enableRange)\r\n            // console.log(\"range in input cruitios update\", prevValue, this.inputCell.current.value )\r\n            if (start.x === end.x && start.y === end.y) {\r\n              this.inputCell.current.value = `${prevValue} (${start.y + start.x} )`\r\n            } else this.inputCell.current.value = `${prevValue} (${start.y + start.x} : ${end.y + end.x})`              \r\n            // this.props.onSend(this.defaultCell.id, this.inputCell.current.value, this.props.cellFromState)\r\n          } else if (enabledInput && enabledInput.value.charAt(0) === \"=\" && endOfInput.test(enabledInput.value) && start.x) {\r\n            enabledInput.value += `${start.y + start.x}`\r\n          }\r\n        }\r\n      }      \r\n    }\r\n  \r\n    render(){\r\n      const { isFirst, active, isSelected, cellFromState} = this.props\r\n      let {showInput} = this.state\r\n      let selected \r\n      if(isFirst)\r\n        selected = \"first\";\r\n      else if(active ) \r\n        selected = \"selected\";\r\n      else if(isSelected) \r\n        selected = \"selected-formula\";\r\n      else \r\n        selected = cellFromState.className;\r\n      // console.log(\"render cell\", this.props)\r\n      return(\r\n        <td \r\n            className={`table_cell ${selected}`}\r\n            onClick = {this.setCurrent}\r\n            onMouseDown = {this.startSelecting}\r\n            onMouseEnter = {this.continueSelecting}\r\n            onMouseUp = {this.stopSelecting}\r\n            onDoubleClick = {this.changeCellView}\r\n            >   \r\n            {showInput && \r\n            <input \r\n                    className='table-cell input'\r\n                    style = {{display: showInput ? \"inline-block\" : \"none\"}}\r\n                    autoFocus = {true}\r\n                    defaultValue={cellFromState.formula}\r\n                    ref={this.inputCell}\r\n                    onBlur={this.changeFormula}\r\n                    onKeyUp={this.changeFormulaKeyboard}\r\n                /> \r\n                } \r\n                <span\r\n                  style = {{display: !showInput ? \"inline-block\" : \"none\"}}\r\n                >\r\n                  {cellFromState.value}\r\n                </span>\r\n             \r\n        </td>\r\n      )\r\n    } \r\n    \r\n  \r\n    static get defaultProps(){\r\n      return {\r\n        cell: {\r\n          id: '',\r\n          formula: ''          \r\n        },\r\n        cellFromState: {\r\n          value: '',\r\n          id: '',\r\n          className: 'cell'\r\n        },\r\n        \r\n        onSend(id, formula){\r\n          console.log(\"onSend isn't set\", id, formula)\r\n        },\r\n        startSelecting(id){\r\n          return null\r\n        },\r\n        continueSelecting(id){\r\n          return null\r\n        },\r\n        stopSelecting(id){\r\n          return null\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\nexport default connect(state => ({cell: state.cell}), {onSend: actionInputCell, actionCellClear: actionCellClear})(Cell)\r\n  ","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport * as actions from \"../actions/table\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport ControlsContainer from './Controlscontainer';\r\n\r\nimport Cell from '../components/Cell';\r\n\r\nclass MathTable extends Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        table: {          \r\n        },\r\n        selection: {\r\n          selectedCells: [],\r\n          pressed: false,\r\n          startX: null,\r\n          startY: null,\r\n          endX: null,\r\n          endY: null\r\n        },\r\n        selectionInFormula: {\r\n          selectedCells: [],\r\n          pressed: false,\r\n          startX: null,\r\n          startY: null,\r\n          endX: null,\r\n          endY: null\r\n        },\r\n        currentCell: {\r\n          id: null, \r\n          isEdited: false\r\n        },\r\n        counter: 0               \r\n      }   \r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {      \r\n      let {table, id, saveItem, updateItem } = this.props\r\n      if ( table && table !== prevProps.table ){\r\n        this.setState( prevState => ({ \r\n          ...prevState,       \r\n          table: table,\r\n          counter: 2      // to avoid saving when loading saved file    \r\n        }))\r\n      } \r\n      if (prevState.counter == 0 && this.state.counter == 1 && prevState.table !== this.state.table){\r\n        saveItem({\r\n          title: \"Untitled\",        \r\n          // item: (+new Date).toString(16).substr(4),\r\n          table: {...this.state.table}          \r\n        })\r\n        this.props.history.push(`/${id}`)\r\n      } else if(this.state.counter > 0 && this.state.counter < 10 && prevState.table !== this.state.table){\r\n        // here max number of changes between savings can be set\r\n        console.log(\"pass update\", this.state.table)\r\n      } else if( this.state.counter === 10 && prevState.counter !== this.state.counter){\r\n        updateItem({table: this.state.table}, id)\r\n      }\r\n    } \r\n\r\n    enableEditing = (id, flag) => {\r\n      let newSelectionObj = {\r\n        selectedCells: [],\r\n        pressed: false,\r\n        startX: null,\r\n        startY: null,\r\n        endX: null,\r\n        endY: null \r\n      } \r\n\r\n      this.setState( prevState => ({ \r\n        ...prevState,       \r\n        selectionInFormula: newSelectionObj,\r\n        currentCell: {\r\n          id: id, \r\n          isEdited: flag\r\n        }  \r\n      })\r\n    )}\r\n\r\n    startSelecting = (_x, _y) => {\r\n      let flag = this.state.currentCell.isEdited  \r\n      let newSelectionObj = {\r\n        selectedCells: [(_y+_x)],\r\n        pressed: true,\r\n        startX: _x,\r\n        startY: _y,\r\n        endX: _x,\r\n        endY: _y \r\n      } \r\n\r\n      if (_y+_x !== this.state.currentCell.id)\r\n      this.setState( prevState => ({ \r\n              ...prevState, \r\n              selection: flag ? {...prevState.selection} : newSelectionObj,\r\n              selectionInFormula: flag ? newSelectionObj : {...prevState.selectionInFormula},\r\n              currentCell: {...prevState.currentCell}  \r\n            })\r\n        )       \r\n    }\r\n\r\n    continueSelecting = (_x, _y) => {\r\n      let kindOfSelection = this.state.currentCell.isEdited ? \"selectionInFormula\" : \"selection\"    \r\n\r\n      if (this.state[kindOfSelection].pressed \r\n        && this.state[kindOfSelection].startY + this.state[kindOfSelection].startX !== this.state.currentCell.id \r\n      ){\r\n        let newSelectionArray = this.getSelectedCells(this.state[kindOfSelection].startX, this.state[kindOfSelection].startY, _x, _y)\r\n        this.setState( prevState => ({\r\n          ...prevState,           \r\n          [kindOfSelection]: {\r\n            selectedCells: newSelectionArray,\r\n            pressed: true,\r\n            startX: prevState[kindOfSelection].startX,\r\n            startY: prevState[kindOfSelection].startY,\r\n            endX:  _x, \r\n            endY: _y \r\n          }\r\n        }));  \r\n      }        \r\n    }\r\n\r\n    getSelectedCells = (startX, startY, endX, endY) => {\r\n      var selected = [];\r\n      let range = this.range\r\n      range(startY.charCodeAt(0), endY.charCodeAt(0)).map((_col) => {\r\n        range(+startX, +endX).map((row) => {\r\n          let col = String.fromCharCode(_col)\r\n            selected.push((col+row));\r\n        });\r\n      });\r\n      return selected;\r\n    }\r\n\r\n    range = (start, end) => {\r\n      var array = [];\r\n      var inc = end - start > 0;\r\n      for (var i = start; inc ? i <= end : i >= end; inc ? i++ : i--) {\r\n        inc ? array.push(i) : array.unshift(i);\r\n      }\r\n      return array;\r\n    };\r\n\r\n    stopSelecting = () => {        \r\n        this.setState( prevState => ({ \r\n          ...prevState,\r\n          selection: {\r\n            ...prevState.selection,\r\n            pressed: false,            \r\n          },\r\n          selectionInFormula: {\r\n            ...prevState.selectionInFormula,\r\n            pressed: false,            \r\n          },   \r\n          currentCell: {\r\n            ...prevState.currentCell,\r\n            id: null\r\n          }       \r\n        }));  \r\n    }    \r\n    \r\n    calculateValue = (state, formula, id) => {\r\n      let _value = null\r\n      let operation = null\r\n      let rangeMatch = null      \r\n      let stringCell = {\r\n        formula: formula,\r\n        value: formula,\r\n        className: 'cell left'\r\n      }\r\n     \r\n      if(formula.charAt(0) === \"'\"){ \r\n        return {...stringCell,\r\n                value: formula.substring(1)\r\n                } \r\n      } else if(formula.charAt(0) === '\"' || formula.charAt(0) === \"`\"){ \r\n        return {...stringCell} \r\n      }  else if (formula.charAt(0) === \"=\"){\r\n        try {\r\n          if (formula.length === 1){\r\n            throw \"error\"\r\n          }\r\n\r\n          formula = formula.toUpperCase()\r\n          let updatedFormula = formula\r\n\r\n          if (formula.indexOf(id) >= 0){\r\n            throw \"error\"\r\n          }\r\n          \r\n          let divNull = formula.search(/\\/(?=0)+/g)\r\n          if (divNull > 0)\r\n            return {formula: formula,\r\n              value: '#DIV/0!',\r\n              className: 'cell-error'};\r\n          \r\n          let notProperSymbols = formula.search(/[^*/+=() :\\-0-9A-Z]+/g)\r\n          if (notProperSymbols > 0)\r\n            return {formula: formula,\r\n              value: '#NAME?',\r\n              className: 'cell-error'};\r\n\r\n          rangeMatch = formula.search(/^(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)\\s*\\(\\s*[A-Z][0-9]+\\s*:\\s*[A-Z][0-9]+\\s*\\)/g) >= 0\r\n            if (rangeMatch){\r\n              let start = formula.match(/[A-Z][0-9]/g)[0]                  \r\n              let end = formula.match(/[A-Z][0-9]/g)[1] || start\r\n              let startX = start.slice(1)\r\n              let endX = end.slice(1)\r\n              let arrFromState = this.getSelectedCells(startX, start[0], endX, end[0]) // array of id in selected range\r\n              if (arrFromState.indexOf(id) >= 0){\r\n                throw \"error\"\r\n              }\r\n              \r\n              let arrOfValues = []\r\n              arrFromState.forEach(item => {\r\n                let cellX = item.slice(1)\r\n                let foundValue = state[item[0]] && \r\n                                state[item[0]][cellX] && \r\n                                state[item[0]][cellX].value ? \r\n                                +state[item[0]][cellX].value : 0\r\n                arrOfValues.push(foundValue)\r\n              })\r\n              \r\n              operation = formula.match(/(\\s*SUM|\\s*DIFF|\\s*PROD|\\s*DIV)/g)[0].trim().toLowerCase()\r\n              switch(operation){\r\n                  case ('sum'): { \r\n                    _value = arrOfValues.reduce((prevValue, currentValue) => \r\n                      prevValue + currentValue\r\n                    )\r\n                    break\r\n                  }\r\n                  case ('diff'): {\r\n                    _value = arrOfValues.reduce((prevValue, currentValue) => \r\n                      prevValue - currentValue\r\n                    )\r\n                    break\r\n                  }\r\n                  case ('prod'): {\r\n                    _value = arrOfValues.reduce((prevValue, currentValue) => \r\n                      prevValue * currentValue\r\n                    )\r\n                    break\r\n                  }\r\n                  case ('div'): {\r\n                    _value = arrOfValues.reduce((prevValue, currentValue) => \r\n                      prevValue / currentValue\r\n                    )\r\n                    break\r\n                  }\r\n                  default: _value = eval(updatedFormula.substring(1))\r\n                }\r\n                return {formula: formula,\r\n                  value: _value,\r\n                  className: 'cell'}\r\n            }\r\n\r\n          let matches = formula.match(/[A-Z][1-9]+/g) || []\r\n          if (matches.length){\r\n            matches.forEach(match => {\r\n              let cellX = match.slice(1)\r\n              let foundValue = state[match[0]] && \r\n                              state[match[0]][cellX] && \r\n                              state[match[0]][cellX].value ? \r\n                              state[match[0]][cellX].value : '0'\r\n              updatedFormula = updatedFormula.replace(match, foundValue)\r\n            })\r\n            _value = eval(updatedFormula.substring(1)) \r\n            return {formula: formula,\r\n              value: _value,\r\n              className: 'cell'}                \r\n          } else _value = eval(formula.substring(1))\r\n          return {formula: formula,\r\n                  value: _value,\r\n                  className: 'cell'}\r\n        } catch(e) {\r\n            return {formula: formula,\r\n              value: \"error\",\r\n              className: 'cell-error'}\r\n            }\r\n        }  else if(formula.charAt(0) !== '=' && formula.search(/\\D/g) >=0){ \r\n          return {...stringCell}            \r\n        } else if(formula.charAt(0) !== '=' ){ \r\n          return {...stringCell,\r\n                  className: 'cell'\r\n                }            \r\n        }\r\n    }\r\n  \r\n    cellUpdate = (state, changedCell, formula) => {\r\n      let id = \"\" + changedCell.id\r\n      let upDatedCell = Object.assign(\r\n        {}, changedCell, this.calculateValue(state, formula, id))\r\n      let cellX = id.slice(1)\r\n      if (state[id[0]] === undefined) \r\n        state[id[0]]={}; // creating key for new column\r\n      state[id[0]][cellX] = upDatedCell      \r\n  \r\n      for (var row in state){ // searching for cells which formulas include value of updated cell\r\n        for (var item in state[row]){ \r\n          let currentItem = state[row][item]\r\n          let formulaMatch = currentItem.formula.search(/^(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)\\s*\\(\\s*[A-Z][0-9]+\\s*:\\s*[A-Z][0-9]+\\s*\\)/g) >= 0       \r\n          if (currentItem.formula.charAt(0) === '=' &&\r\n            currentItem.formula.indexOf(changedCell.id) > -1 &&\r\n            currentItem.id !== changedCell.id ){\r\n              state = this.cellUpdate( state, currentItem, currentItem.formula)\r\n          } else if (currentItem.id !== changedCell.id && formulaMatch) { // cells with range in formula\r\n            let start = currentItem.formula.match(/[A-Z][0-9]/g)[0]                  \r\n            let end = currentItem.formula.match(/[A-Z][0-9]/g)[1] || start\r\n            let startX = start.slice(1)\r\n            let endX = end.slice(1)\r\n            let arrFromState = this.getSelectedCells(startX, start[0], endX, end[0])\r\n            if (arrFromState.indexOf(id) >= 0){\r\n              state = this.cellUpdate( state, currentItem, currentItem.formula)\r\n            }            \r\n          }               \r\n        }\r\n      }\r\n      return state\r\n    }\r\n  \r\n    updateState = (_currentCell, _formula) => {\r\n      if (!_formula) return;\r\n      let prevState = JSON.parse(JSON.stringify(this.state.table));\r\n      let formula = \"\" + _formula      \r\n      let newState = this.cellUpdate(prevState, _currentCell, formula);\r\n      if ( newState !== this.state.table){\r\n        this.setState (prevstate => ({\r\n          ...prevstate,\r\n          table: newState,\r\n          counter: prevstate.counter === 10 ? 1 : prevstate.counter + 1\r\n        }))\r\n      }     \r\n    }\r\n\r\n    cellTable = ( colStart, colEnd, rowStart, rowEnd) => { // for render\r\n      let arrayOfRows = []    \r\n      for ( let x = rowStart; x <= rowEnd; x++ ){\r\n          let arrayOfCells = []\r\n          for (let y = colStart.charCodeAt(0); y <= colEnd.charCodeAt(0); y++){\r\n              let interCell = {}              \r\n                Object.assign(interCell, {x: x, y: String.fromCharCode(y) }) \r\n              arrayOfCells.push(interCell)\r\n          }\r\n          arrayOfRows.push(arrayOfCells)\r\n      }\r\n      return arrayOfRows\r\n    }\r\n\r\n  \r\n    render(){\r\n      let { selection, currentCell, selectionInFormula, counter } = this.state\r\n      let savingStatus = \"\"\r\n      if (counter === 0) {\r\n        savingStatus = \"Unsaved\"         \r\n      } else if (counter > 0 && counter < 10){\r\n        savingStatus = \"Changed\"\r\n      } else if (counter === 10){\r\n        savingStatus = \"Saved\"\r\n      }\r\n      let _selectionRange = {\r\n        start: {\r\n          x: selectionInFormula.startX,\r\n          y: selectionInFormula.startY\r\n        }, \r\n        end: {\r\n          x: selectionInFormula.endX,\r\n          y: selectionInFormula.endY\r\n        }}\r\n\r\n      let data = this.cellTable(\"@\", \"Z\", 0, 40) // here amount of rows and columns can be set\r\n      let list = data.map((item, i)=> {\r\n              return (\r\n                  <tr key={i} className={i === 0 ? \"row-first\" : \"row\"} >\r\n                      {item.map(cell => {                        \r\n                        let {x, y} = cell\r\n                        let key = y+x\r\n                        let initialCell = {                          \r\n                            id: y+x,\r\n                            x: x,\r\n                            y: y,\r\n                            value: null,\r\n                            formula: null,\r\n                            className: 'cell-title'                          \r\n                        }          \r\n                        if (x == 0) // cell - name of columns\r\n                          return (\r\n                              <Cell key={key}                              \r\n                              cellFromState={\r\n                               {\r\n                                  ...initialCell,\r\n                                  value: y == \"@\" ? savingStatus : y,\r\n                                  className: 'cell-title'\r\n                                } } \r\n                              isEdited = {currentCell.isEdited}                             \r\n                              />\r\n                          )\r\n                        else if (y == \"@\") // cell - name of rows\r\n                        return(\r\n                          <Cell key={key}                          \r\n                          cellFromState={\r\n                           {\r\n                              ...initialCell,\r\n                              value:  x ,\r\n                              className: 'cell-title'                              \r\n                            } } \r\n                          isEdited = {currentCell.isEdited}                              \r\n                          />\r\n                        )\r\n                        else return ( // average cell\r\n                          <Cell \r\n                            key={key} \r\n                            update={this.updateState}\r\n                            enableEditing = {this.enableEditing}\r\n                            isSelected = {selection.selectedCells.pressed}\r\n                            isEdited = {currentCell.isEdited}\r\n                            startSelecting = {this.startSelecting}\r\n                            continueSelecting = {this.continueSelecting}\r\n                            stopSelecting = {this.stopSelecting}\r\n                            isFirst = {selection.startX && ((selection.startY + selection.startX) === key)}\r\n                            // active means selected not while editing formula\r\n                            active = {!currentCell.isEdited && selection.selectedCells.some(x => x == key)}\r\n                            isSelected = {currentCell.isEdited && selectionInFormula.selectedCells.some(x => x == key)}\r\n                            selectionRange = {_selectionRange}\r\n                            cellFromState={\r\n                              this.state.table[y] !== undefined && this.state.table[y][x] !== undefined? \r\n                              this.state.table[y][x] : {\r\n                                ...initialCell,\r\n                                value: '' ,\r\n                                formula: '',\r\n                                className: 'cell'\r\n                              } }                              \r\n                          />\r\n                        )\r\n                      })}\r\n                  </tr>\r\n              )\r\n          }        \r\n      )\r\n      \r\n        return (\r\n          <div className=\"wrapper\" >\r\n            <ControlsContainer \r\n              update={this.updateState}\r\n              enableArray = {currentCell.isEdited}           \r\n              selectionRange = {_selectionRange} \r\n              enableEditing={this.enableEditing}\r\n            />\r\n            <div className='table-box' >\r\n              <table className='table' >\r\n                  <tbody>{list}</tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )  \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n        id: state.table.id,\t\t\r\n\t\t    table: state.table.table\t\t\r\n\t};\r\n};\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ ...actions }, dispatch);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withRouter(MathTable));","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport * as actions from \"../actions/acs\";\r\n\r\n\r\nclass ControlsContainer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            enableAutoFocus: false\r\n        }\r\n        \r\n    this.inputCell = React.createRef()\r\n}\r\n   \r\n    changeCellFormulaKeyboard = (e) => {\r\n        const { update, actionInputCell, enableEditing, cell } = this.props\r\n        let enableRange = this.inputCell.current.value.toUpperCase().search(/(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)\\s*\\(\\s*/g) >= 0\r\n        if (enableRange){\r\n            enableEditing ( cell.id, true) // enable selection of range\r\n        }\r\n        if (e.key === 'Enter' ){\r\n            if (this.inputCell.current.value !== cell.cell.formula){\r\n                update( cell.cell, this.inputCell.current.value) // mathTable method to calculate and update value. cell - object from redux from current cell               \r\n            }\r\n            enableEditing( cell.id, false)\r\n            this.setState({enableAutoFocus: false})\r\n            this.inputCell.current.blur()\r\n          } else {\r\n            actionInputCell(cell.id, this.inputCell.current.value, cell.cell )\r\n            this.setState({enableAutoFocus: true})\r\n            this.inputCell.current.focus()\r\n        }\r\n    }\r\n\r\n    updateState = (e) => {\r\n        e.preventDefault()\r\n        const {update, cell} = this.props\r\n        if (this.state.enableAutoFocus){\r\n            if(this.inputCell.current.value !== cell.cell.formula){\r\n                update( this.props.cell.cell, this.inputCell.current.value)\r\n                this.inputCell.current.blur()\r\n                this.setState({enableAutoFocus: false})\r\n            } else {\r\n                this.inputCell.current.focus()\r\n                this.setState({enableAutoFocus: false})\r\n            }\r\n        }\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext){        \r\n        if(nextProps.cell.id !== this.props.cell.id){\r\n            return true;\r\n        }            \r\n        return true\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {              \r\n        let {start, end} = this.props.selectionRange \r\n        if (this.props.enableArray){ // to display selection of group of cells in real time\r\n            let enableRange = this.inputCell.current.value.toUpperCase().search(/(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)\\s*\\(\\s*/g) >= 0         \r\n            let prevValue = this.inputCell.current.value.toUpperCase().match(/(=\\s*SUM|=\\s*DIFF|=\\s*PROD|=\\s*DIV)/g) || \"=\"          \r\n            if (this.inputCell.current && enableRange && start.x){ \r\n                if (start.x === end.x && start.y === end.y) {\r\n                    this.inputCell.current.value = `${prevValue} (${start.y + start.x} )`\r\n                } else this.inputCell.current.value = `${prevValue} (${start.y + start.x} : ${end.y + end.x})`            \r\n            }\r\n        }      \r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className='controls' key={this.props.cell.formula} >\r\n            <span name='id' className='controls_current-id' > \r\n                {this.props.cell.id ? this.props.cell.id : \"ID\" } \r\n            </span>\r\n            <input \r\n                className='controls_input'\r\n                name='formula'\r\n                type='text'\r\n                autoFocus={this.state.enableAutoFocus}\r\n                disabled={this.props.cell.id ? false : true}\r\n                defaultValue={this.props.cell.formula}\r\n                ref={this.inputCell}\r\n                onKeyUp={this.changeCellFormulaKeyboard}\r\n                onBlur={this.updateState}\r\n            />\r\n        </div>\r\n        )\r\n    }   \r\n\r\n    static get defaultProps(){\r\n        return {\r\n          cell: {\r\n            id: '',\r\n            formula: '',\r\n            cell: {}\r\n          },\r\n          actionInputCell(id, formula){\r\n            console.log(\"actionInputCell isn't set\", id, formula)\r\n          }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n        cell: state.cell\t\t\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ ...actions }, dispatch);\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ControlsContainer);"],"sourceRoot":""}